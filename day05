import java.io.*;
import java.util.*;

public class day05 {

    private static List<String>[] after = new ArrayList[100];

    public static void main(String[] args) {

        boolean blank = false;
        List<String> updates = new ArrayList<>();
        int sumOne = 0, sumTwo = 0;

        for (int i = 10; i < 100; i++) {
            after[i] = new ArrayList<String>();
        }

        try {
            File myObj = new File("src/data/data05.txt");
            Scanner myReader = new Scanner(myObj);
            while (myReader.hasNextLine()) {
                String line = myReader.nextLine();
                if (line.equals("")) {
                    blank = true;
                }
                if (!blank) {
                    int x = Integer.parseInt(line.substring(0,2));
                    String y = line.substring(3);
                    after[x].add(y);
                } else {
                    updates.add(line);
                }
            }
            myReader.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }

        for (int i = 1; i < updates.size(); i++) {
            String[] up = updates.get(i).split(",");
            boolean broke = false;
            int mid = up.length / 2;

            for (int j = up.length - 1; j > 0; j--) {
                for (int k = j - 1; k >= 0; k--) {
                    if (after[Integer.parseInt(up[j])].contains(up[k])) {
                        sumTwo += fix(up, j, k);
                        broke = true;
                        break;
                    }
                }
                if (broke) {
                    break;
                }
            }
            if (!broke) {
                sumOne += Integer.parseInt(up[mid]);
            }
        }

        System.out.println("Part 1: " + sumOne);
        System.out.println("Part 2: " + sumTwo);
    }

    private static int fix(String[] s, int pos, int swap) {
        int mid = s.length/2;
        String temp = s[pos];
        String[] sFixed = s.clone();

        sFixed[pos] = s[swap];
        sFixed[swap] = temp;

        for (int j = sFixed.length - 1; j > 0; j--) {
            for (int k = j - 1; k >= 0; k--) {
                if (after[Integer.parseInt(sFixed[j])].contains(sFixed[k])) {
                    return fix(sFixed, j, k);
                }
            }
        }

        return Integer.parseInt(sFixed[mid]);
    }
}
